@model WorkOrderEMS.Models.RuleModel
@{
    ViewBag.Title = "Rules";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";

    long locationId = 0;
    long userType = 0;
    WorkOrderEMS.Models.eTracLoginModel ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];

    if (ObjLogin != null)
    {
        locationId = ObjLogin.LocationID;
        userType = ObjLogin.UserRoleId;
    }
}
@section scripts{
    <script type="text/javascript">
    var $_locationId = '@locationId';
        var $_userTypeId = '@userType';
        var $_update = '@ViewBag.UpdateMode';
    </script>
    <script type="text/javascript">
    $(window).bind('resize', function () {
        var width = $('#jqGrid_container').width();
        $(' #tbl_RuleList').setGridWidth(width);
    });
    </script>
    
}
 <script src="~/Areas/AdminSection/GridList/Rules/Rules.js"></script>

<div class="col-lg-12 col-md-12  col-sm-12  col-xs-12">
    <div id="jqGrid_container">
        <table id="tbl_RuleList" border="0" cellpadding="0" cellspacing="0"></table>
        <div id="divRuleListPager"></div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="myModalForRule" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" >
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">X</span></button>
                <h4 class="modal-title" id="myModalLabel">Add Rules</h4>
            </div>
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @using (Html.BeginForm("SaveRule", "Rule", FormMethod.Post, new { enctype = "multipart/form-data", @id = "RuleForm" }))
            {
                <div class="modal-body">
                    <div id="divDetailPreview" class="">
                        <div class="row">
                            <div class="panel-body">
                                <div class="form-horizontal">
                                    @Html.HiddenFor(model => model.RuleId)
                                    @Html.HiddenFor(model => model.ModuleId)
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.Label("Module Name", new { @class = "control-label col-lg-4 star" })
                                            <div class="col-lg-8">
                                                @Html.TextBoxFor(model => model.ModuleName, new { @Placeholder = "Module Name", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ModuleName)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.Label("Level", htmlAttributes: new { @class = "control-label col-lg-4 star" })
                                            <div class="col-lg-8">
                                                @Html.TextBoxFor(model => model.Level, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.Label("Rule Name", new { @class = "control-label col-lg-4 star" })
                                            <div class="col-lg-8">
                                                @Html.TextBoxFor(model => model.RuleName, new { @Placeholder = "Rule Name", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.RuleName)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.Label("Pass By User", htmlAttributes: new { @class = "control-label col-lg-4" })
                                            <div class="col-lg-8">
                                                @Html.DropDownListFor(model => model.ByPassUserId, new SelectList(ViewBag.UserList, "UserId", "UserName"), "--Select User--", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ByPassUserId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.Label("Pass Level", htmlAttributes: new { @class = "control-label col-lg-4" })
                                            <div class="col-lg-8">
                                                @Html.TextBoxFor(model => model.PassLevel, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.PassLevel, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.Label("Slab From", htmlAttributes: new { @class = "control-label col-lg-4 star" })
                                            <div class="col-lg-8">
                                                @Html.TextBoxFor(model => model.SlabFrom, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.SlabFrom, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            @Html.Label("Slab To", htmlAttributes: new { @class = "control-label col-lg-4 star" })
                                            <div class="col-lg-8">
                                                @Html.TextBoxFor(model => model.SlabTo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.SlabTo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <br /><br />
                <div class="panel-footer">
                    <div class="text-right">
                        @*<button type="button" class="btn btn-default bluebutton text-right" onclick="return PrintDivForVehicleDetails('DivVehicleDetailsIndex');" data-dismiss="modal">Print Details</button>*@
                        <button data-dismiss="modal" class="btn btn-default" id="btnCancelqwe">Close</button>
                        <input type="submit" class="btn btn-primary" id="btnSaveForRule" value="Save" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        if ($_update == "True") {
            $("#myModalForRule").modal('show');
        }
        else {
            $("#myModalForRule").modal('hide');
        }
    });
    $('#RuleDate').datepicker({
        format: "mm/dd/yyyy",
        startDate: new Date()
    });
</script>
