@model WorkOrderEMS.Models.VendorSetupManagementModel
@{
    ViewBag.Title = "Company Registration";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    string StateID = string.Empty, LocationTypeID = string.Empty;
    string ServiceId = string.Empty;
    if (ViewBag.UpdateMode != null && ViewBag.UpdateMode == true)
    {
        ViewBag.Title = "Update Company"; ServiceId = ViewBag.ServicesID;
    }
    string hostingPrefix = System.Configuration.ConfigurationManager.AppSettings["hostingPrefix"];
    string CompanyDocPath = System.Configuration.ConfigurationManager.AppSettings["CompanyDocuments"];
}
@*<link href="~/Content/eCounting/VendorWizard.css" rel="stylesheet" />*@
@*<link href="~/Content/formwizard.css" rel="stylesheet" />*@
<link href="~/Content/eFleetVehicle/VendorRegistrationCSS.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/BindDropDown/DropDownList.js"></script>
<script type="text/javascript" src="~/Scripts/common/Masking.js"></script>
<script type="text/javascript" src="~/Scripts/common/Common.js"></script>
<script src="~/Scripts/eFleetVehicle/reg.js"></script>
<style>
    .input-disabled {
        background-color: #EBEBE4;
    }
</style>
@Html.AntiForgeryToken()

<div class="col-lg-12 col-md-12  col-sm-12  col-xs-12">
    <div class="panel panel-default">
        <div class="panel-heading">
            Set Up Company
        </div>
        @using (Html.BeginForm("Index", "AdminCompany", FormMethod.Post, new { enctype = "multipart/form-data", id = "msform" }))
        {
            <!-- progressbar -->
            <ul id="progressbar">
                <li class="active" style="width: 20%;"><span>Company<p>Details to setup Company</p></span></li>
                <li style="width: 20%;"><span>Insurance & License<p>Insurance & License Information</p></span></li>
                <li style="width:20%;"><span>Account<p>Account Details</p></span></li>
            </ul>
            <!-- fieldsets -->
            @Html.HiddenFor(model => model.StateAfterIsSame, new { @id = "StateAfterIsSame" })
            @Html.HiddenFor(model => model.ProductList, new { @id = "ProductList" })
            <fieldset id="VendorSetUp">
                <div class="row">
                    <div class="panel-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            <div class="form">
                                <div class="top-row">
                                    <div class="field-wrap" style="width: 30%;">
                                        <label id="lblCompanyType">
                                            Company Type<span class="req">*</span>
                                        </label>
                                        @Html.DropDownListFor(model => model.CompanyType, new List<SelectListItem>
                                            {
                                               new SelectListItem() {Text = "--Select Company Type--", Value="0"},
                                               new SelectListItem() {Text = "Operating", Value="2"},
                                               new SelectListItem() {Text = "Subsidary", Value="3"},
                                               }, new { @id = "CompanyType" })                             
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.VendorType)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Company Name<span class="req">*</span>
                                        </label>
                                        @Html.TextBoxFor(model => model.CompanyNameLegal, new { @id = "CompanyName" })

                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.CompanyNameLegal)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Company Name DBA
                                        </label>
                                        @Html.TextBoxFor(model => model.CompanyNameDBA)

                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.CompanyNameDBA)
                                        </div>
                                    </div>
                                </div>
                                <div class="top-row">
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Point Of Contact<span class="req">*</span>
                                        </label>
                                        @Html.TextBoxFor(model => model.PointOfContact)
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.PointOfContact)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Job Tile<span class="req">*</span>
                                        </label>
                                        @Html.TextBoxFor(model => model.JobTile)

                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.JobTile)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Tax Number<span class="req">*</span>
                                        </label>
                                        @Html.TextBoxFor(model => model.TaxNo)

                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.TaxNo)
                                        </div>
                                    </div>
                                </div>

                                <div class="top-row">
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Company Address<span class="req">*</span>
                                        </label>
                                        @Html.TextBoxFor(model => model.Address1, new { @id = "Address1" })
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Address1)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            City<span class="req">*</span>
                                        </label>
                                        @Html.TextBoxFor(model => model.Address1City, new { @id = "Address1City" })

                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Address1City)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label id="lblCompanyState">
                                            State<span class="req">*</span>
                                        </label>
                                        @if (ViewBag.StateList != null)
                                        {
                                            {@Html.DropDownListFor(model => model.Address1State, new SelectList(ViewBag.StateList, "StateId", "StateName"), "--Select State--", new { @id = "Address1State" })}
                                    }
                                    else
                                    {<select id="Address2State"><option value="-1">@ViewBag.StateList</option></select>}
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Address1State)
                                        </div>
                                    </div>
                                </div>
                                <div class="top-row">
                                    <div class="field-wrap">
                                        <span>
                                            @Html.CheckBoxFor(model => model.IsAddress2Same, new { @class = "SameAddress" })
                                            Is Shipping address same as company address
                                        </span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="top-row">
                                    <div class="field-wrap" style="width: 30%;">
                                        <label id="lblShippingAddress">
                                            Shipping Address
                                        </label>
                                        @Html.TextBoxFor(model => model.Address2, new { @id = "Address2" })
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Address2)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label id="lblShipingCity">
                                            City
                                        </label>
                                        @Html.TextBoxFor(model => model.Address2City, new { @id = "Address2City" })
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Address2City)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label id="lblAddress2">
                                            State
                                        </label>
                                        @if (ViewBag.StateList != null)
                                        {
                                            {@Html.DropDownListFor(model => model.Address2State, new SelectList(ViewBag.StateList, "StateId", "StateName"), "--Select State--", new { @id = "Address2State" })}
                                    }
                                    else
                                    {<select id="Address2State"><option value="-1">@ViewBag.StateList</option></select>}
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Address2State)
                                        </div>
                                    </div>
                                </div>
                                <div class="top-row">
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Phone 1<span class="req">*</span>
                                        </label>
                                        @Html.TextBoxFor(model => model.Phone1, new { @maxLength = "10" })
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Phone1)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Phone 2
                                        </label>
                                        @Html.TextBoxFor(model => model.Phone2, new { @maxLength = "10" })

                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Phone2)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            E-mail
                                        </label>
                                        @Html.TextBoxFor(model => model.VendorEmail)
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.VendorEmail)
                                        </div>
                                    </div>
                                </div>
                                <div class="top-row">
                                    <div class="field-wrap" style="width: 30%;">
                                        <label>
                                            Website
                                        </label>
                                        @Html.TextBoxFor(model => model.Website)

                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.Website)
                                        </div>
                                    </div>
                                    <div class="field-wrap" style="width: 30%;">
                                        <label style="margin-left:-13px;">
                                            Company Documents<span class="req"></span>
                                        </label>
                                        <div id="dvCompanyPreview">
                                        </div>
                                        <input id="fileuploadCompany" type="file" style="margin-left:50%;" name="CompanyDocumentsFile" />
                                        <ul class="attachment">
                                            @if (Model.CompanyDocuments != null && Model.CompanyDocuments != "")
                                            {
                                                <li style="margin-left :25%;margin-top:20px;">
                                                    <a class="title" href="@Url.Content(CompanyDocPath+Model.CompanyDocuments)">@Model.CompanyDocuments</a>
                                                </li>
                                            }
                                        </ul>
                                        <div class="errorspace">
                                            @Html.ValidationMessageFor(model => model.CompanyDocuments)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <input type="button" id="LocationNext" name="next" class="btn btn-success next  nxt-btn" style="border-radius:25px;width:90px;" value="Next" />
                <input type="button" onclick="callCancel();" class="btn btn-default bluebutton nxt-btn" style="border-radius:25px;width:90px;" formnovalidate="formnovalidate" value="Cancel" />
            </fieldset>

            <fieldset id="VendorInsurance">
                @{ViewBag.myModelprefixName = "VendorInsuranceModel."; ViewBag.ActionSection = "VendorInsurance";}
                <div id="divInsurance">
                    @Html.Partial("~/Areas/AdminSection/Views/Shared/_CompanyInsuranceAndLicense.cshtml")
                </div>
                <div class="clearfix"></div>
                <input type="button" name="next" class="btn btn-success next  nxt-btn" value="Next" style="border-radius:25px;width:90px;" />
                <input type="button" name="previous" class="btn btn-default bluebutton previous prev_btn" value="Previous" style="border-radius:25px;width:90px;" />
                <input type="button" onclick="callCancel();" class="btn btn-default bluebutton nxt-btn" formnovalidate="formnovalidate" value="Cancel" style="border-radius:25px;width:90px;" />
            </fieldset>

            <fieldset id="VendorAccountDetails">
                @{ViewBag.myModelprefixName = "VendorAccountDetailsModel."; ViewBag.ActionSection = "VendorAccountDetail";}
                <div id="divFacility">
                    @Html.Partial("~/Areas/AdminSection/Views/Shared/_AccountDetailsCompanyAdmin.cshtml")
                </div>
                <div class="clearfix"></div>
                <input type="button" name="previous" class="btn btn-default bluebutton previous prv-last-btn pull-right marginright10 marginbottom10 LRmar" value="Previous" style="border-radius:25px;width:90px;" />
                <button type="submit"  class="btn btn-success pull-right marginright10 marginbottom10 Lmar10" style="border-radius:25px;width:150px;">Save &amp; Update </button>
            </fieldset>
        }
    </div>
</div>

<div class="clearfix"></div>
<script>
    $(document).ready(function () {
        $("#lblVendorType").hide(); $("#lblCompanyState").hide(); $("#lblAddress2").hide();
        $("#lblCompanyType").hide();
        $(".SameAddress").change(function () {
            var AddrState1;
            var AddrCountry1;
            if (this.checked) {
                var Addr1 = $("#Address1").val();
                var AddrCity1 = $("#Address1City").val();
                $("#Address2").val(Addr1);
                $("#Address2City").val(AddrCity1);
                AddrState1 = $('#Address1State').find('option:selected').val();
                $('#StateAfterIsSame').val(AddrState1);
                $('#Address2State').val(AddrState1).trigger('change');
                $('#Address2,#Address2City').attr('readonly', true);
                $('#Address2State').attr('disabled', 'disabled');
                $('#Address2,#Address2City,#Address2State').css("background-color", "#EBEBE4");
                $('#Address2,#lblShippingAddress,#lblShipingCity,#lblAddress2').addClass('active highlight');
                $("#lblAddress2").show();
            }
            else {
                $('#Address2,#Address2City').val("");
                $('#Address2,#Address2City,#Address2State').css("background-color", "white");
                $('#Address2,#Address2City,select #Address2State').attr('readonly', false);
                $('#Address2,#Address2City,#Address2State').removeClass('input-disabled');
            }
        });
        $("#VendorType").live("click", function () {
            $("#lblVendorType").addClass('active highlight');
            $("#lblVendorType").show();
        });
        $("#CompanyType").live("click", function () {
            $("#lblCompanyType").addClass('active highlight');
            $("#lblCompanyType").show();
        });
        
        $("#Address1State").live("click", function () {
            $("#lblCompanyState").addClass('active highlight');
            $("#lblCompanyState").show();
        });
        $("#Address2State").live("click", function () {
            $("#lblAddress2").addClass('active highlight');
            $("#lblAddress2").show();
        });
        $(function () {
            $("#fileuploadCompany").change(function () {
                $("#dvCompanyPreview").html("");
                var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.pdf|.doc|.txt)$/;
                if (regex.test($(this).val().toLowerCase())) {
                    if ($.browser.msie && parseFloat(jQuery.browser.version) <= 9.0) {
                        $("#dvCompanyPreview").show();
                        $("#dvCompanyPreview")[0].filters.item("DXImageTransform.Microsoft.AlphaImageLoader").src = $(this).val();
                    }
                    else {
                        if (typeof (FileReader) != "undefined") {
                            $("#dvCompanyPreview").show();
                            //$("#dvCompanyPreview").append("<img />");
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                $("#dvCompanyPreview img").attr("src", e.target.result);
                            }
                            reader.readAsDataURL($(this)[0].files[0]);
                        } else {
                            alert("This browser does not support FileReader.");
                        }
                    }
                }
            })
        });
     });
</script>
<script src="~/Scripts/eCounting/VendorMultiStepWizard.js"></script>