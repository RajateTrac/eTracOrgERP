@model WorkOrderEMS.Models.Employee.EmergencyContectForm
    @{ 
        long ApplicantId = Convert.ToInt64(Session["ApplicantId"]);
    }
<style>
    table {
        /*border:2px solid black!important;*/
        /*padding-left:10px !important;
        padding-right:10px!important;*/
    }

    tr {
        /*border:1px solid black!important;*/
        padding-left: 20px !important;
        padding-right: 20px !important;
        padding-top: 5px;
        padding-bottom: 5px;
    }

    td {
        /*border: 1px solid black !important;*/
        padding-left: 20px;
        padding-right: 20px;
        padding-top: 5px;
        padding-bottom: 5px;
    }

    .tableHeading {
        font-size: 20px;
        font-weight: 200;
        //background-color: lightgray;
        text-align: center
    }

    .p1 {
        font-size: 20px;
        font-family: Times New Roman;
        margin: 73px 149px 0px 277px;
        text-align: justify;
        color: #000;
    }

    h3 {
        margin: 100px 0px 0px 83px;
    }

    .text-line {
        background-color: transparent;
        outline: none;
        outline-style: none;
        border-top: none;
        border-left: none;
        border-right: none;
        border-bottom: solid #000 1px;
    }

    p {
        margin-left: 106px;
    }

    .center {
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

    .row {
        display: flex;
    }

    .error {
        color: red;
    }

    input[type="checkbox"]:after {
        line-height: 1.5em !important;
        content: '' !important;
        display: block !important;
        margin-top: -3px !important;
        margin-left: -3px !important;
        border: 1px solid transparent !important;
        border-radius: 0px !important;
        line-height: 1.3 !important;
        background: none !important;
    }
</style>
<link href="~/Content/toastr.min.css" rel="stylesheet" />
<script type="text/javascript">


    $(document).ready(function () {
        $("#EmpId").focus();
        $("input").each(function () {
            var element = $(this);
            if (element.val() == "") {
                $("#btnNext").prop("disabled", true);
                $("#btnNext").attr('disabled', 'disabled');
            }
        });
    });
    //$("#EmpId").focusout(function() {
    //           if($(this).val()=='') {
    //               $("#errorEmpId").show();
    //           }
    //           else {

    //               // If it is not blank.
    //               $("#errorEmpId").hide();
    //           }
    //       }) .trigger("focusout");

    $("#EmpId").on("blur", function () {
        debugger;
        var EmpId = $(this).val();

        ////   $('input').each(function() {
        ////if(!$(this).val()){
        ////    alert('Some fields are empty')
        //   // $("#btnNext").hide();

        //   return false;
        //}
        //   });

        if (EmpId == '') {
            $("#errorEmpId").show();
            //$("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorEmpId").hide();
            // $("#FirstName").prop("disabled", false);
            $("#FirstName").focus();
        }

    });
    //$("#FirstName").focusout(function() {
    //       if($(this).val()=='') {
    //           $("#errorFName").show();
    //       }
    //       else {

    //           // If it is not blank.
    //           $("#errorFName").hide();
    //       }
    //   }) .trigger("focusout");

    $("#FirstName").on("blur", function () {
        var firstname = $(this).val();

        if (firstname == '') {
            $("#errorFName").show();
            // $("#MiddleName").prop("disabled", true);
        }
        else {
            $("#errorFName").hide();
            // $("#MiddleName").prop("disabled", false);
            $("#MiddleName").focus();
        }

    });

    $("#MiddleName").on("blur", function () {
        var middleName = $(this).val();

        if (middleName == '') {
            $("#errorMiddleName").show();

        }
        else {
            $("#errorMiddleName").hide();

        }

    });

    $("#LastName").on("blur", function () {
        var errorLastName = $(this).val();

        if (errorLastName == '') {
            $("#errorLastName").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorLastName").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#NickName").on("blur", function () {
        var NickName = $(this).val();

        if (NickName == '') {
            $("#errorNickName").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorNickName").hide();
            //$("#FirstName").prop("disabled", false);
        }

    });

    $("#Gender").on("blur", function () {
        var Gender = $(this).val();

        if (Gender == '') {
            $("#errorGender").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorGender").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#HomeAddress").on("blur", function () {
        var HomeAddress = $(this).val();

        if (HomeAddress == '') {
            $("#errorHomeAddress").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorHomeAddress").hide();
            //$("#FirstName").prop("disabled", false);
        }

    });

    $("#HomePhone").on("blur", function () {
        var HomePhone = $(this).val();

        if (HomePhone == '') {
            $("#errorHomePhone").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorHomePhone").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#errorMobile").on("blur", function () {
        var Mobile = $(this).val();

        if (Mobile == '') {
            $("#errorMobile").show();
            //$("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorMobile").hide();
            //$("#FirstName").prop("disabled", false);
        }

    });

    $("#Mobile").on("blur", function () {
        var Mobile = $(this).val();

        if (Mobile == '') {
            $("#errorMobile").show();
            //  $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorMobile").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#HomeEmail").on("blur", function () {
        var HomeEmail = $(this).val();

        if (HomeEmail == '') {
            $("#errorHomeEmail").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorHomeEmail").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#DOB").on("blur", function () {
        var DOB = $(this).val();

        if (DOB == '') {
            $("#errorDOB").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorDOB").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });
    $("#SSN").on("blur", function () {
        var SSN = $(this).val();

        if (SSN == '') {
            $("#errorSSN").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorSSN").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#License").on("blur", function () {
        var License = $(this).val();

        if (License == '') {
            $("#errorLicense").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorLicense").hide();
            //$("#FirstName").prop("disabled", false);
        }

    });

    $("#EmergencyContactName").on("blur", function () {
        var ContactName = $(this).val();

        if (ContactName == '') {
            $("#errorContactName").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorContactName").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#RelationShip").on("blur", function () {
        var RelationShip = $(this).val();

        if (RelationShip == '') {
            $("#errorRelationShip").show();
            // $("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorRelationShip").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });

    $("#Address").on("blur", function () {
        var Address = $(this).val();

        if (Address == '') {
            $("#errorAddress").show();
        }
        else {
            $("#errorAddress").hide();
        }

    });

    $("#ConactInfo").on("blur", function () {
        var ConactInfo = $(this).val();

        if (ConactInfo == '') {
            $("#errorConactInfo").show();
            //$("#FirstName").prop("disabled", true);
        }
        else {
            $("#errorConactInfo").hide();
            // $("#FirstName").prop("disabled", false);
        }

    });







    $("#Mobile").on("blur", function () {
        var mobNum = $(this).val();
        var filter = /^\d*(?:\.\d{1,2})?$/;
        if (filter.test(mobNum)) {
            if (mobNum.length == 10) {
                $("#errorMobile").hide();
            } else {
                // $("#Mobile").focus();
                $("#errorMobile").show();
                //alert('Please put 10  digit mobile number');


                return false;
            }
        }
        else {
            alert('Not a valid number');
            return false;
        }
    });


    $('#Mobile').keypress(function (e) {
        debugger
        NumericOnly(e);

    });
    $("#HomePhone").on("blur", function () {
        var mobNum = $(this).val();
        var filter = /^\d*(?:\.\d{1,2})?$/;

        if (filter.test(mobNum)) {
            if (mobNum.length == 10) {

                $("#errorHomePhone").hide();
            } else {
                // $("#Mobile").focus();
                $("#errorHomePhone").show();
                // alert('Please put 10  digit mobile number');

                return false;
            }
        }
        else {
            alert('Not a valid number');

            return false;
        }

    });


    $('#HomePhone').keypress(function (e) {
        debugger
        NumericOnly(e);

    });

    function NumericOnly(e) {
        var regex = new RegExp("^[0-9]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    }

    $("#ConactInfo").on("blur", function () {
        var mobNum = $(this).val();
        var filter = /^\d*(?:\.\d{1,2})?$/;

        if (filter.test(mobNum)) {
            if (mobNum.length == 10) {
                $("#errorConactInfo").hide();

            } else {
                // $("#Mobile").focus();
                $("#errorConactInfo").show();
                // alert('Please put 10  digit mobile number');

                return false;
            }
        }
        else {
            alert('Not a valid number');

            return false;
        }

    });
    $('#ConactInfo').keypress(function (e) {
        debugger
        NumericOnly(e);

    });


    $('#FirstName').keypress(function (e) {

        var firstname = $('#FirstName').val();

        var regex = new RegExp("^[a-zA-Z ]+$");
        var strigChar = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(strigChar)) {

            return true;

        }
        return false
    });
    $('#MiddleName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var strigChar = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(strigChar)) {
            return true;
        }
        return false
    });
    $('#LastName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var strigChar = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(strigChar)) {
            return true;
        }
        return false
    });
    $('#NickName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var strigChar = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(strigChar)) {
            return true;
        }
        return false
    });
    $('#Gender').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z]+$");
        var strigChar = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(strigChar)) {
            return true;
        }
        return false
    });
    $('#EmergencyContactName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var strigChar = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(strigChar)) {
            return true;
        }
        return false
    });
    $('#RelationShip').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var strigChar = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(strigChar)) {
            return true;
        }
        return false
    });



</script>
<div class="p1">
    <div class="row">
        <img src="~/Images/FormImages/image-form.jpg" alt="background image" />
        <h3><u>Emergency Contact Form</u></h3>
    </div>
    @using (Html.BeginForm("_emergencyContactForm", "Guest", FormMethod.Post, new { id = "emergencycontactform" }))
    {
        <br />
        <input type="hidden" value="@Model.FormStatusw4" name="FormStatusw4" id="FormStatusw4">
        <input type="hidden" value="@Model.FormStatusI9" name="FormStatusI9" id="FormStatusI9">
        <input type="hidden" value="@Model.FormStatusdd" name="FormStatusdd" id="FormStatusdd">
        <input type="hidden" value="@Model.FormStatusEvf" name="FormStatusEvf" id="FormStatusEvf">
        <input type="hidden" value="@Model.FormStatussif" name="FormStatussif" id="FormStatussif">
        <input type="hidden" value="@Model.FormStatusbcf" name="FormStatusbcf" id="FormStatusbcf">
        <input type="hidden" value="@Model.FormStatusrop" name="FormStatusrop" id="FormStatusrop">
        <input type="hidden" value="@Model.FormStatusprfecf" name="FormStatusprfecf" id="FormStatusprfecf">
        <input type="hidden" value="@Model.FormStatusprfcaf" name="FormStatusprfcaf" id="FormStatusprfcaf">
        <input type="hidden" value="@Model.FormStatusprf" name="FormStatusprf" id="FormStatusprf">
        <input type="hidden" value="@Model.FormStatusff" name="FormStatusff" id="FormStatusff">

        @Html.HiddenFor(x => x.EcfId)
        <table>
            <tr>
                <td>
                    Employee ID
                </td>
                <td>
                    @Html.TextBoxFor(x => x.EmpId, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.EmpId, "", new { @style = "color:red;" })*@
                </td>
                @*<td>
                        <span id="errorEmpId" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    First Name
                </td>
                <td>
                    @Html.TextBoxFor(x => x.FirstName, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.FirstName, "", new { @style = "color:red;" })*@
                </td>
                @*<td>
                        <span id="errorFName" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Middle Name
                </td>
                <td>
                    @Html.TextBoxFor(x => x.MiddleName, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.MiddleName, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorMiddleName" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Last Name
                </td>
                <td>
                    @Html.TextBoxFor(x => x.LastName, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.LastName, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorLastName" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Nick Name
                </td>
                <td>
                    @Html.TextBoxFor(x => x.NickName, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.NickName, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorNickName" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Gender
                </td>
                <td>
                    @Html.TextBoxFor(x => x.Gender, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.Gender, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorGender" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Home Address
                </td>
                <td>
                    @Html.TextBoxFor(x => x.HomeAddress, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.HomeAddress, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorHomeAddress" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Home Phone
                </td>
                <td>
                    @Html.TextBoxFor(x => x.HomePhone, new { @class = "text-line", @style = "width:590px;" })
                    @Html.ValidationMessageFor(x => x.HomePhone, "", new { @style = "color:red;" })

                </td>
                <td>
                    <span id="errorHomePhone" class="error">*</span>
                </td>
            </tr>
            <tr>
                <td>
                    Mobile Phone
                </td>
                <td>
                    @Html.TextBoxFor(x => x.Mobile, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.Mobile, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorMobile" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Home Email Address
                </td>
                <td>
                    @Html.TextBoxFor(x => x.HomeEmail, new { @class = "text-line", @style = "width:590px;" })
                    @Html.ValidationMessageFor(x => x.HomeEmail, "", new { @style = "color:red;" })

                </td>
                <td>
                    <span id="errorHomeEmail" class="error">*</span>
                </td>
            </tr>
            <tr>
                <td>
                    BirthDay
                </td>
                <td>
                    @Html.TextBoxFor(x => x.DOB, new { @class = "text-line", @style = "width:590px;", @id = "DOBForEmergency" })
                    @*@Html.ValidationMessageFor(x => x.DOB, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorDOB" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Goverment ID or SSN
                </td>
                <td>
                    @Html.TextBoxFor(x => x.SSN, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.SSN, "", new { @style = "color:red;" })*@

                </td>
                @*<td>
                        <span id="errorSSN" class="error">*</span>
                    </td>*@
            </tr>
            <tr>
                <td>
                    Driver's License/State ID#
                </td>
                <td>
                    @Html.TextBoxFor(x => x.License, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.License, "", new { @style = "color:red;" })*@

                </td>


            </tr>


            <tr>

                <td class="tableHeading" colspan="2">
                    Emergency Contact Information
                </td>
                <td></td>
            </tr>
            <tr>
                <td>
                    Emergency Contact's Name
                </td>
                <td>
                    @Html.TextBoxFor(x => x.EmergencyContactName, new { @class = "text-line", @style = "width:590px;" })
                    @Html.ValidationMessageFor(x => x.EmergencyContactName, "", new { @style = "color:red;" })

                </td>
                <td>
                    <span id="errorContactName" class="error">*</span>
                </td>
            </tr>
            <tr>
                <td>
                    RelationShip
                </td>
                <td>
                    @Html.TextBoxFor(x => x.RelationShip, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.RelationShip, "", new { @style = "color:red;" })*@

                </td>

            </tr>
            <tr>
                <td>
                    Address
                </td>
                <td>
                    @Html.TextBoxFor(x => x.Address, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.Address, "", new { @style = "color:red;" })*@

                </td>

            </tr>

            <tr>
                <td>
                    Phone Number(s)
                </td>
                <td>
                    @Html.TextBoxFor(x => x.ConactInfo, new { @class = "text-line", @style = "width:590px;" })
                    @*@Html.ValidationMessageFor(x => x.ConactInfo, "", new { @style = "color:red;" })*@

                </td>

            </tr>

        </table>
        <br><br><br>

    }
</div>
<div class="row" style="height: 50px;background-color: #292b48;bottom: 0;overflow: hidden;position: fixed;width: 100%;margin-left: 0px;">
    <div class="col-md-4 text-right">

    </div>
    <div class="col-md-4 text-center">
        <span>
            <i class="fa fa-check-square" aria-hidden="true" title="Go To CheckList" onclick="GuestCheckList(this,emergencycontactform)" style="font-size: 20px;margin-top: 15px;color: #6cc387f2;padding-right:30px;cursor:pointer;"></i>
        </span>

        <span>
            <a><i class="fa fa-question-circle" aria-hidden="true" title="Help" style="font-size: 20px;color: #f73c3c;margin-top: 6px;padding-right:30px;cursor:pointer;" onclick="SendFormIssueNotification('Emergency Contact', '@ApplicantId');"></i></a>
        </span>

        <span>
            <a><i class="fa fa-floppy-o" aria-hidden="true" onclick="SaveBeforeNext(this,emergencycontactform)" title="Save" style="font-size: 20px;color: #6cc387f2;margin-top: 6px;padding-right:30px;cursor:pointer;"></i></a>
        </span>

    </div>
    <div class="col-md-4 text-right">
        <span style="cursor:pointer;" onclick="SubmitForm(this,emergencycontactform)" title="Go to next Direct Deposite form">
            <a><i class="fa fa-long-arrow-right" title="Next" style="font-size: 45px;color: #6cc387f2;margin-top: 2px;"></i></a>
        </span>
    </div>
</div>
<div id="openConatctModal"></div>
<script src="~/Scripts/toastr.min.js"></script>
<script src="~/Scripts/Guest/ApplicantFormSave.js"></script>
<script>
    $(document).ready(function () {
        $("#DOBForEmergency").datepicker();
        var base_url = window.location.origin;
        $.ajax({
            type: "GET",
            url: base_url + "/Guest/_ContactInfo",
            success: function (data) {
                debugger
                $("#openConatctModal").html(data);
                $("#myModelForContactDetails").modal("show");
            },
            error: function () {
            }
        });
    });
</script>