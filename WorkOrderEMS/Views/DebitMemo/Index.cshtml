@model WorkOrderEMS.Models.eCounting.DebitMemo.DebitMemoModel
@{
    ViewBag.Title = "Debit Memo";

    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
    long locationId = 0;
    long userType = 0;
    WorkOrderEMS.Models.eTracLoginModel ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];

    if (ObjLogin != null)
    {
        locationId = ObjLogin.LocationID;
        userType = ObjLogin.UserRoleId;
    }
    //string hostingPrefix = System.Configuration.ConfigurationManager.AppSettings["hostingPrefix"];
    //string CompanyDocPath = System.Configuration.ConfigurationManager.AppSettings["DebitMemoDocuments"];
}
@section scripts{
    <script type="text/javascript">
    var $_locationId = '@locationId';
    var $_userTypeId = '@userType';
    </script>
    <script src="~/GridListing/JsGridScript/ListDebitMemo.js"></script>
}

<style>
    .jsgrid-grid-body {
        min-height: 400px;
    }
</style>

<div class="content-body" style="min-height: 920px;">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card aos-init" data-aos="fade-up">
                    <div class="card-header" style="height: 45px;">
                        <div class="card-header headerSize" style="height:45px;">
                            <a href="javascript:void(0)"><span><i id="AddDebitMemo" class="mdi mdi-plus" style="color:white;font-size:50px;"></i></span></a>
                            <div class="basic-form">
                                <div class="form-group">
                                    <input id="searchDebitMemotext" name="SearchText" type="text" style="margin-top:18px;" class="form-control input-rounded" placeholder="Vendor Name">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="jsGrid_DebitMemoList" class="jsgrid" style="position: relative; height: 400px; width: 100%;">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*@using (Ajax.BeginForm("SaveDebitMemoByVendorId", "DebitMemo", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ResultDiv", InsertionMode = InsertionMode.Replace }, new { enctype = "multipart/form-data", @id = "debitMemoForm", @class = "step-form-horizontal" }))*@
@*@using (Html.BeginForm("SaveDebitMemoByVendorId", "DebitMemo", FormMethod.Post, new { enctype = "multipart/form-data", @id = "debitMemoForm" , @class = "step-form-horizontal"}))*@
<div class="modal bs-example-modal-lg fade preview" id="myModalForNewDebitMemo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Ajax.BeginForm("", "", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ResultDiv", InsertionMode = InsertionMode.Replace}, new { enctype = "multipart/form-data", @id = "debitMemoForm", @class = "step-form-horizontal" }))
            {
            <div class="modal-header">
                @Html.HiddenFor(x => x.ActionModeI,new { @id = "ActionModeI"})
                
                    <h5 class="modal-title" id="myAddModalLabel">Add Debit Memo</h5> 
                
                <button type="button" class="close" data-dismiss="modal">
                    <span>×</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="divDetailPreview">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Location Name</label>                               
                                @if (Session != null)
                                {
                                    if (Session["eTrac_UserLocations"] != null)
                                    {

                                        @Html.DropDownList("Location", new SelectList((List<WorkOrderEMS.Models.UserLocations>)Session["eTrac_UserLocations"], "LocationId", "LocationName"), "--Select Locaion--", new { @id = "Location", @onchange = "getVendorList(false)", @class = "form-control input-rounded" })
                                    }
                                }
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Vendor Name</label>
                                @Html.DropDownListFor(model => model.VendorId, new SelectList(ViewBag.VendorList, "Value", "Text"), new { @id = "Vendor", @onchange = "getProductOrderList(this.value)", @class = "form-control input-rounded" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Purchase Order</label>
                                @Html.DropDownListFor(model => model.PurchaseOrderId, new SelectList(ViewBag.ProductOrderList, "LogPOId", "DisplayLogPOId"), "--Select Product Order Name--", new { @id = "ProductOrderId", @class = "form-control input-rounded" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Debit Amount</label>
                                @Html.TextBoxFor(x => x.DebitAmount, new { @id = "DebitAmount", @class = "form-control input-rounded" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Note</label>
                                @Html.TextAreaFor(x => x.Note, new { @id = "Note", @class = "form-control input-rounded" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Status</label>
                                @Html.EnumDropDownListFor(x => x.DebitMemoStatus, "Select the status", new { @class = "form-control input-rounded"})
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Upload reference document</label>
                                <input id="DebitMemoFile" type="file" style="margin-left:50%;" name="DebitMemoFile" />
                               
                                @*@Html.fileu(x => x.Note, new { @id = "uploadfile", @class = "form-control input-rounded" })*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success" style="border-radius:25px;width:90px;" id="ConfirmDebitMemo">Confirm</button>
                <button data-dismiss="modal" class="btn btn-warning bluebutton" style="border-radius:25px;width:90px;" id="btnCancelDebitMemo">Close</button>
            </div>
            }
        </div>
    </div>
</div>

<div class="modal bs-example-modal-lg fade preview" id="myModalForEditDebitMemo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Ajax.BeginForm("", "", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ResultDiv", InsertionMode = InsertionMode.Replace }, new { enctype = "multipart/form-data", @id = "debitMemoEditForm", @class = "step-form-horizontal" }))
            {
            <div class="modal-header">
                @Html.HiddenFor(x => x.ActionModeU, new { @id = "ActionModeU" })
                @Html.HiddenFor(x => x.DebitId, new { @id = "DebitId" })
                @Html.HiddenFor(x => x.UploadedEditDocumentName, new { @id = "UploadedEditDocumentName" })

                <h5 class="modal-title" id="myEditModalLabel">Edit Debit Memo</h5>

                <button type="button" class="close" data-dismiss="modal">
                    <span>×</span>
                </button>
            </div>
                <div class="modal-body">
                    <div id="divDetailPreview">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Location Name</label>
                                    <div id="lblEditLocationName" class="form-control-static"></div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Vendor Name</label>
                                    <div id="lblEditVendor" class="form-control-static"></div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Purchase Order</label>
                                    <div id="lblEditPoOrderId" class="form-control-static"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Debit Amount</label>
                                    <div id="lblEditDebitAmount" class="form-control-static"></div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Note</label>
                                    <div id="lblEditNote" class="form-control-static"></div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Status</label>
                                    @Html.EnumDropDownListFor(x => x.DebitMemoStatusEdit, "Select the status", new { @class = "form-control input-rounded" })
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Upload reference document</label>
                                    <input id="editNewDocument" type="file" style="margin-left:50%;" name="editNewDocument" />
                                    
                                    @*@Html.fileu(x => x.Note, new { @id = "uploadfile", @class = "form-control input-rounded" })*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" style="border-radius:25px;width:90px;" id="ConfirmDebitMemo">Confirm</button>
                    <button data-dismiss="modal" class="btn btn-warning bluebutton" style="border-radius:25px;width:90px;" id="btnCancelDebitMemo">Close</button>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal bs-example-modal-lg fade preview" id="myModalForDMDetails" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Debit Memo Details</h5>
                <button type="button" class="close pull-right" data-dismiss="modal">
                    <span>×</span>
                </button>
            </div>
            <div class="modal-body m-0">
                <div id="divDetailPreview" class="">

                    <div class="" id="DivPODetailsIndex">
                        <div class="row">
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Debit Memo ID</label>
                                <div id="lblDMId" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Location of Vendor</label>
                                <div id="lblDMLocation" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Vendor Name</label>
                                <div id="lblVendorName" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Purchase Order Name</label>
                                <div id="lblPOName" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Total Debit Amount</label>
                                <div id="lblDebitAmount" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Debit Memo Status</label>
                                <div id="lblDmStatus" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Notes</label>
                                <div id="lblDebitNotes" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Debit Memo Date</label>
                                <div id="lblDMDate" class="form-control-static"></div>
                            </div>
                            <div class="form-group col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                <label>Click to download document</label>
                                <button type="button" onclick="downloadFile()">Download!</button>
                                @Html.HiddenFor(x => x.UploadedDocumentName)
                            </div>
                        </div>
                    </div>                    
                </div>
            </div><br /><br />
            <div class="panel-footer p-3">
                <div class="text-right">
                    <button data-dismiss="modal" class="btn btn-primary" id="btnCancel">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var DebitMemourl = 'DebitMemo/GetDebitMemoListByLocationId';
    function downloadFile() {       
        var urlToSend = $("#UploadedDocumentName").val();
        
        var req = new XMLHttpRequest();
        req.open("GET", urlToSend, true);
        req.responseType = "blob";
        req.onload = function (event) {
            var blob = req.response;
            //var fileName = req.getResponseHeader("fileName") //if you have the fileName header available
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = urlToSend;
            link.click();
        };
        req.send();
    }     

    function getVendorList(IsRecurring) {
        var Location = $("#Location").val();
        $.ajax({
            url: $_HostPrefix + 'POTypeData/GetVendorList',
            type: 'POST',
            datatype: 'application/json',
            contentType: 'application/json',
            data: JSON.stringify({ Location: +Location, IsRecurring: IsRecurring }),
            success: function (result) {
                $("#Vendor").html("");
                $("#Vendor").append
                    ($('<option></option>').val(null).html("---Select Vendor---"));
                for (var i = 0; i < result.length; i++) {
                    $("#Vendor").append('<option value=' + result[i].CompanyId + '>' + result[i].CompanyNameLegal + '</option>');
                }
            },
            error: function () { alert(" Something went wrong..") },
        });
    }

    function getProductOrderList(data) {
        var POUrl = 'POTypeData/GetAllPOList';
        var Location = $("#Location").val();
        $.ajax({
            type: "GET",
            url: $_HostPrefix + POUrl + '?VendorId=' + data + '&Location=' + Location,
            dataType: "json",
            success: function (result) {
                $("#ProductOrderId").html("");
                $("#ProductOrderId").append
                    ($('<option></option>').val(null).html("---Select Po List---"));
                for (var i = 0; i < result.length; i++) {
                    $("#ProductOrderId").append('<option value=' + result[i].LogPOId + '>' + result[i].DisplayLogPOId + '</option>');
                }
            },
            error: function () { alert(" Something went wrong..") }
        });
    }

    $(function () {

        $("#fileuploadCompany").change(function () {
            $("#dvCompanyPreview").html("");
            var allowedExtensions = /(\.pdf|\.doc|\.docx|\.txt)$/i;
            var size = this.files[0].size;
            if (!allowedExtensions.exec($(this).val().toLowerCase())) {
                alert("Invalid file type");
                $(this).val("");
                return false;
            }
            else if (size >= 4194304) {
                alert("Max file size 4 mb.");
                $(this).val("");
                return false;
            }
        })   
        // this will be called on submit
        $("#debitMemoForm").submit(function (event) {
         debugger;
            var dataString;
            event.preventDefault();
            
            if ($("#debitMemoForm").attr("enctype") == "multipart/form-data") {
                //this only works in some browsers.
                //purpose? to submit files over ajax. because screw iframes.
                //also, we need to call .get(0) on the jQuery element to turn it into a regular DOM element so that FormData can use it.
                dataString = new FormData($("#debitMemoForm").get(0));
                contentType = false;
                processData = false;
            } else {
                // regular form, do your own thing if you need it
            }
            $.ajax({
                type: "POST",
                url: 'DebitMemo/SaveDebitMemoByVendorId',
                data: dataString,
                dataType: "json", //change to your own,
                contentType: contentType,
                processData: processData,
                success: function (data) {
                    debugger;
                    if (data == true) { 
                        DoDeibitSearch();
                        $("#myModalForNewDebitMemo").modal('hide');
                    }                    
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    //do your own thing
                    alert("fail");
                }
            });
        }); //end .submit()

        $("#debitMemoEditForm").submit(function (event) {
         debugger;
            var dataString;
            event.preventDefault();
            
            if ($("#debitMemoEditForm").attr("enctype") == "multipart/form-data") {
                //this only works in some browsers.
                //purpose? to submit files over ajax. because screw iframes.
                //also, we need to call .get(0) on the jQuery element to turn it into a regular DOM element so that FormData can use it.
                dataString = new FormData($("#debitMemoEditForm").get(0));
                contentType = false;
                processData = false;
            } else {
                // regular form, do your own thing if you need it
            }
            $.ajax({
                type: "POST",
                url: 'DebitMemo/SaveDebitMemoByVendorId',
                data: dataString,
                dataType: "json", //change to your own,
                contentType: contentType,
                processData: processData,
                success: function (data) {
                    debugger;
                    if (data == true) { 
                        DoDeibitSearch();
                        $("#myModalForEditDebitMemo").modal('hide');
                    }                    
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    //do your own thing
                    alert("fail");
                }
            });
        }); //end .submit()

        $("#searchDebitMemotext").keyup(function () {
        DoDeibitSearch()
        });

        $("#AddDebitMemo").on("click", function (event) {

        $("#ActionModeU").val("");
        $("#ActionModeI").val("I");

        $("#Location").val($("#Location option:first").val());//selecting top index
        $("#Vendor").val($("#Vendor option:first").val());    //selecting top index    
        $("#ProductOrderId").val($("#ProductOrderId option:first").val());//selecting top index

        $("#DebitAmount").val("");
        $("#DebitAmount").attr("placeholder", "Please enter debit amount").val("").focus().blur();//for changing placeholder
        
        $("#Note").val("");//UploadedDocumentName
        $("#Note").attr("placeholder", "Enter note regarding debit memo").val("").focus().blur();//for changing placeholder   
        
        $("#DebitMemoStatus").val($("#DebitMemoStatus option:first").val());//selecting top index

        $("#UploadedDocumentName").val("");

        $("#ActionModeI").val("I");        

        $("#myModalForNewDebitMemo").modal('show');
        
        //window.location.href = $_HostPrefix + AddCompany;
    });

    var act;
    $("#jsGrid_DebitMemoList").jsGrid({
        height: "170%",
        width: "100%",
        filtering: false,
        editing: false,
        inserting: false,
        sorting: false,
        paging: true,
        autoload: true,
        pageSize: 10,
        pageButtonCount: 5,

        controller: {
            loadData: function (filter) {
                return $.ajax({
                    type: "GET",
                    url: DebitMemourl,
                    data: filter,
                    dataType: "json"
                });
            }
        },

        fields: [            
            { name: "VendorName", title: "Vendor Name", type: "text", width: 50 },
            { name: "DebitAmount", title: "Debit Amount", type: "text", width: 50 },
            { name: "DisplayDate", title: "Date", type: "text", width: 50 },
            { name: "Note", title: "Note", type: "text", width: 50 },
            { name: "DisplayDebitMemoStatus", title: "Status", type: "text", width: 50 },            
            {
                name: "act", items: act, title: "View Details", width: 50, css: "text-center", itemTemplate: function (value, item) {
                    //TO add icon edit and delete to perform update and delete operation
                    var $iconPencil = $("<i>").attr({ class: "fa fa-pencil" }).attr({ style: "color:green;font-size: 22px;" });
                    var $iconList = $("<i>").attr({ class: "fa fa-list" }).attr({ style: "color:black;font-size: 22px;" });

                    var $customEditButton = $("<span style='padding: 0 5px 0 0;'>")
                        .attr({ title: "Edit Debit Memo Details" })
                        .attr({ id: "btn-edit-" + item.Id }).click(function (e) {
                            ViewDetails(item);
                        }).append($iconPencil);

                    var $customCheck = $("<span style='padding: 0 5px 0 0;'>")
                        .attr({ title: "View Debit Memo" })
                        .attr({ id: "btn-edit-" + item.Id }).click(function (e) {
                            ViewDetailsOnly(item);
                        }).append($iconList);

                    return $("<div>").attr({ class: "btn-toolbar" }).append($customEditButton).append($customCheck);                  
                }
            }
        ]
    });
    });

    function DoDeibitSearch()
    {
        var act;
        var _searchresult = $("#searchDebitMemotext").val();

        var act;
        $("#jsGrid_DebitMemoList").jsGrid({
            height: "170%",
            width: "100%",
            filtering: false,
            editing: false,
            inserting: false,
            sorting: false,
            paging: true,
            autoload: true,
            pageSize: 10,
            pageButtonCount: 5,

            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: DebitMemourl + '?txtSearch=' + _searchresult,
                        data: filter,
                        dataType: "json"
                    });
                }
            },

            fields: [
                { name: "VendorName", title: "Vendor Name", type: "text", width: 50 },
                { name: "DebitAmount", title: "Debit Amount", type: "text", width: 50 },
                { name: "DisplayDate", title: "Date", type: "text", width: 50 },
                { name: "Note", title: "Note", type: "text", width: 50 },
                { name: "DisplayDebitMemoStatus", title: "Status", type: "text", width: 50 },
                {
                    name: "act", items: act, title: "View Details", width: 50, css: "text-center", itemTemplate: function (value, item) {
                        //TO add icon edit and delete to perform update and delete operation
                        var $iconPencil = $("<i>").attr({ class: "fa fa-pencil" }).attr({ style: "color:green;font-size: 22px;" });
                        var $iconList = $("<i>").attr({ class: "fa fa-list" }).attr({ style: "color:black;font-size: 22px;" });

                        var $customEditButton = $("<span style='padding: 0 5px 0 0;'>")
                            .attr({ title: "Edit Debit Memo Details" })
                            .attr({ id: "btn-edit-" + item.Id }).click(function (e) {
                                ViewDetails(item);
                            }).append($iconPencil);

                        var $customCheck = $("<span style='padding: 0 5px 0 0;'>")
                            .attr({ title: "View Debit Memo" })
                            .attr({ id: "btn-edit-" + item.Id }).click(function (e) {
                                ViewDetailsOnly(item);
                            }).append($iconList);                       

                        return $("<div>").attr({ class: "btn-toolbar" }).append($customEditButton).append($customCheck);
                    }
                }
            ]
        });
    }

    function ViewDetails(item)
    {
        $("#ActionModeU").val("U");
        $("#ActionModeI").val("");
        debugger;//myAddModalLabel
        //$("#Location").val(item.Location);
        //$("#Vendor").val(item.VendorId);//ProductOrderId ProductOrderId
        //$("#ProductOrderId").val(item.PurchaseOrderId);
        //$("#lblDebitAmount").val(item.DebitAmount);
        //$("#DebitMemoStatus").val(item.Status);//DebitMemoStatus
        //$("#Note").val(item.Note);//UploadedDocumentName

        $("#DebitId").val(item.DebitId);
        $("#lblEditLocationName").html(item.LocationName);
        $("#lblEditVendor").html(item.VendorName);//ProductOrderId ProductOrderId
        $("#lblEditPoOrderId").html(item.ProductOrderName);
        $("#lblEditDebitAmount").html(item.DebitAmount);
        $("#lblEditNote").html(item.Note);//UploadedDocumentName
        $("#DebitMemoStatusEdit").val(item.Status);//DebitMemoStatus //DebitMemoStatusEdit
        


        $("#UploadedDocumentName").val(item.UploadedDocumentName);
        $("#UploadedEditDocumentName").val(item.UploadedEditDocumentName);
        

        //$("#myAddModalLabel").hide();
        //$("#myEditModalLabel").show();
        //$("#myModalForNewDebitMemo").modal('show');myModalForEditDebitMemo
        $("#myModalForEditDebitMemo").modal('show');
    }

    function ViewDetailsOnly(item) {

        debugger;
        $("#lblDMId").html(item.DebitId);
        $("#lblDMLocation").val(item.LocationName);        
        $("#lblVendorName").html(item.VendorName);
        $("#lblPOName").html(item.ProductOrderName);
        $("#lblDebitAmount").html(item.DebitAmount);
        $("#lblDmStatus").html(item.DisplayDebitMemoStatus);
        $("#lblDebitNotes").html(item.Note);
        $("#lblDMDate").html(item.DisplayDate);
        
        $("#UploadedDocumentName").val(item.UploadedDocumentName);//editNewDocument
        //$("#editNewDocument").val(item.editNewDocument);
        $("#myModalForDMDetails").modal('show');
        
    }    

    
    
    // function DoDeibitSearch()
    //{
    //    var act;
    //    var _searchresult = $("#searchDebitMemotext").val();

    //    var act;
    //    $("#jsGrid_DebitMemoList").jsGrid({
    //        height: "170%",
    //        width: "100%",
    //        filtering: false,
    //        editing: false,
    //        inserting: false,
    //        sorting: false,
    //        paging: true,
    //        autoload: true,
    //        pageSize: 10,
    //        pageButtonCount: 5,

    //        controller: {
    //            loadData: function (filter) {
    //                return $.ajax({
    //                    type: "GET",
    //                    url: DebitMemourl + '?txtSearch=' + _searchresult,
    //                    data: filter,
    //                    dataType: "json"
    //                });
    //            }
    //        },

    //        fields: [
    //            { name: "VendorName", title: "Vendor Name", type: "text", width: 50 },
    //            { name: "DebitAmount", title: "Debit Amount", type: "text", width: 50 },
    //            { name: "DisplayDate", title: "Date", type: "text", width: 50 },
    //            { name: "Note", title: "Note", type: "text", width: 50 },
    //            { name: "DisplayDebitMemoStatus", title: "Status", type: "text", width: 50 },
    //            {
    //                name: "act", items: act, title: "View Details", width: 50, css: "text-center", itemTemplate: function (value, item) {
    //                    //TO add icon edit and delete to perform update and delete operation
    //                    var $iconPencil = $("<i>").attr({ class: "fa fa-pencil" }).attr({ style: "color:green;font-size: 22px;" });
    //                    var $iconList = $("<i>").attr({ class: "fa fa-list" }).attr({ style: "color:black;font-size: 22px;" });

    //                    var $customEditButton = $("<span style='padding: 0 5px 0 0;'>")
    //                        .attr({ title: "Edit Debit Memo Details" })
    //                        .attr({ id: "btn-edit-" + item.Id }).click(function (e) {
    //                            ViewDetails(item);
    //                        }).append($iconPencil);

    //                    var $customCheck = $("<span style='padding: 0 5px 0 0;'>")
    //                        .attr({ title: "View Debit Memo" })
    //                        .attr({ id: "btn-edit-" + item.Id }).click(function (e) {
    //                            ViewDetailsOnly(item);
    //                        }).append($iconList);                       

    //                    return $("<div>").attr({ class: "btn-toolbar" }).append($customEditButton).append($customCheck);
    //                }
    //            }
    //        ]
    //    });
    //}
</script>