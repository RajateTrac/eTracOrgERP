
@{
	//Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
	Layout = null;
	string hostingPrefix = System.Configuration.ConfigurationManager.AppSettings["hostingPrefix"];
	WorkOrderEMS.Models.eTracLoginModel ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];
	string loginUserName = "", loginUserEmail = "", loginUserContactNo = "", loginUserProfile = "";
	long loginUserType = 0;
	long locationId = 0;
	long UserId = 0;
	if (ObjLogin != null)
	{
		loginUserName = ObjLogin.FName + "'s";
		loginUserEmail = ObjLogin.Email;
		loginUserProfile = ObjLogin.UserProfile;
		loginUserType = ObjLogin.UserRoleId;
		//loginUserContactNo = ObjLogin.ContactNo;
		locationId = ObjLogin.LocationID;
		UserId = ObjLogin.UserId;
	}
}
<style>
	.client-photo {
		border-radius: 50%;
		height: auto;
		width: 50px;
	}
	.actionbox {
		background-color: #118434;
		text-align: center;
		border-radius: 2px;
		padding: 2px;
		min-width: 20px;
		min-height: 20px;
		color:#000;
	}
	.inline {
		display: inline-block;
		position: relative;
	}
	.white {
		color: white;
		font-size: 25px;
	}
	.action1
	{
		margin:2px;
	}
	.actionBtn {
		margin: 4px;
		color:#000000;
	}
</style>
<script src="~/Content/NewAdminContent/VENDOR/jsgrid/js/jsgrid.min.js"></script>
<script src="https://www.amcharts.com/lib/4/core.js"></script>
<script src="https://www.amcharts.com/lib/4/charts.js"></script>

<script src="https://www.amcharts.com/lib/4/themes/dataviz.js"></script>
<script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>
<script src="https://www.amcharts.com/lib/4/themes/material.js"></script>
<script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>
<script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
<script src="https://www.amcharts.com/lib/3/serial.js"></script>
<link href="~/Content/NewAdminContent/VENDOR/jsgrid/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/Content/NewAdminContent/VENDOR/jsgrid/css/jsgrid-theme.min.css" rel="stylesheet" />

<style>
	.addWhite {
		color: white;
	}

	.widthHeader {
		height: 40px;
	}
</style>
<div class="content-body">
	<!-- row -->
	<div class="container-fluid">
		<div class="row page-titles mx-0 mb-0 mb-md-3 mb-sm-3" data-aos="fade-up">
			<div class="col-sm-12 col-xxl-4 col-lg-4 col-md-12 col-12">
				<div class="welcome-text">
					<h4>Hi, welcome back! @loginUserName</h4>
					<p class="mb-0"> Admin Dashboard</p>
				</div>
			</div>
		</div>
		<div id="epeople">
			<div class="row">
				<div class="col-lg-8" style="padding:6px 0px 0px 13px;">
					<div class="card" data-aos="fade-up">
						<div class="card-body">
							<h4 class="card-title">Employee</h4>
							<div id="chartdiv"></div>
						</div>
					</div>
				</div>
				<div class="col-lg-4" style="padding:6px 0px 0px 13px">
					<div class="card" data-aos="fade-up">
						<div class="card-body">
							<h4 class="card-title">Employee</h4>
							<div id="QRCCount"></div>
						</div>
					</div>
				</div>


			</div>
			<div class="row">
				<div class="col-lg-12" id="hiringOnBordingDiv">
					<div class="card" data-aos="fade-up">
						<div class="card-header" style="height: 45px;">
							<h4 class="card-title addWhite"><b>Hiring & On-Boarding</b></h4>
						</div>
						<div class="card-body">
							<div class="custom-tab-1">
								<ul class="nav nav-tabs">
									<li class="nav-item">
										<a class="nav-link active" data-toggle="tab" href="#home1">On-Boarding</a>
									</li>
									<li class="nav-item">
										<a class="nav-link" data-toggle="tab" onclick="MyOpeningSummery();" href="#profile1">My Opening</a>
									</li>
									<li class="nav-item">
										<a class="nav-link" data-toggle="tab" href="#contact1">Company Opening</a>
									</li>
									<li class="nav-item">
										<a class="nav-link" data-toggle="tab" href="#myinterview" onclick="MyInterviews()">My Interview</a>
									</li>

								</ul>
								<div class="nav-item" style="float:right;display:inline-block">
									<a onclick="JobPosting();">
										<i class="fa fa-chevron-circle-left" id="btnBack" aria-hidden="true" style="font-size: 32px;color: black;padding: 11px 5px 6px 5px;display:none"></i>
									</a>
								</div>
								<div class="tab-content">
									<div class="tab-pane fade show active" id="home1" role="tabpanel">
										<div class="pt-4">
											<div id="ListOnBoarding"></div>
										</div>
									</div>
									<div class="tab-pane fade" id="profile1">
										<div class="pt-4">
											<div id="ListMyOpening"></div>
											<div id="MyOpeningSummery"></div>
											<div class="row mx-md-n5">

											</div>
										</div>
									</div>
									<div class="tab-pane fade" id="contact1">
										<div class="pt-4">
										</div>
									</div>
									<div class="tab-pane fade" id="myinterview">
										<div class="pt-4">
											<div id="myinterviews"></div>
										</div>
									</div>
								</div>
							</div>

						</div>
					</div>
				</div>
			</div>
		</div>
		<div id="infofactsheet">

		</div>
	</div>
</div>
@Html.Partial("~/Views/NewAdmin/ePeople/_HiringOnBoarding.cshtml")
<!--**********************************
	Content body end
***********************************-->

<script>
	am4core.ready(function () {

		// Themes begin
		am4core.useTheme(am4themes_material);
		am4core.useTheme(am4themes_animated);
		// Themes end

		// Create chart instance
		var chart = am4core.create("EmployeePieChart", am4charts.PieChart);

		// Add data
		chart.data = [{
			"User Type": "Administrator",
			"Count": 2//dataJSON.CountPanel[0].ManagerCount
		}, {
			"User Type": "Manager",
			"Count": 4
		}, {
			"User Type": "Employee",
			"Count": 12//dataJSON.CountPanel[0].EmpCount
		}];

		// Add and configure Series
		var pieSeries = chart.series.push(new am4charts.PieSeries());
		pieSeries.dataFields.value = "Count";
		pieSeries.dataFields.category = "User Type";
		pieSeries.innerRadius = am4core.percent(50);
		pieSeries.ticks.template.disabled = true;
		pieSeries.labels.template.disabled = true;

		var rgm = new am4core.RadialGradientModifier();
		rgm.brightnesses.push(-0.8, -0.8, -0.5, 0, - 0.5);
		pieSeries.slices.template.fillModifier = rgm;
		pieSeries.slices.template.strokeModifier = rgm;
		pieSeries.slices.template.strokeOpacity = 0.4;
		pieSeries.slices.template.strokeWidth = 0;

		chart.legend = new am4charts.Legend();
		chart.legend.position = "right";

	}); // end am4core.ready()
</script>
<script>
	var chartDAR = AmCharts.makeChart("eTimediv", {
		"theme": "none",
		"type": "serial",
		"startDuration": 7,
		"dataProvider": [{
			"Cost Code": "Travel",
			"Budget": 4334,
			"color": "#1740AE"
		}, {
			"Cost Code": "Marketing",
			"Budget": 4000,
			"color": "#758DCB"
		}, {
			"Cost Code": "Other Travel",
			"Budget": 3466,
			"color": "#86E2E8"
		}],
		"valueAxes": [{
			"position": "left",
			"axisAlpha": 0,
			"gridAlpha": 0
		}],
		"graphs": [{
			"balloonText": "[[category]]: <b>[[value]]</b>",
			"colorField": "color",
			"fillAlphas": 0.85,
			"lineAlpha": 0.1,
			"type": "column",
			"topRadius": 1,
			"valueField": "Budget"
		}],
		"depth3D": 40,
		"angle": 30,
		"chartCursor": {
			"categoryBalloonEnabled": false,
			"cursorAlpha": 0,
			"zoomable": false
		},
		"categoryField": "Cost Code",
		"categoryAxis": {
			"gridPosition": "start",
			"axisAlpha": 1,
			"gridAlpha": 0,
			"labelRotation": 20,
		},
		"export": {
			"enabled": true
		}

	}, 0);
</script>

<script>
	$(document).ready(function () {
		getApplicantInfo();
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetDashboardHeadCount", "GlobalAdmin")",
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (jsondata) {
        //successFuncPie(response);
        if (jsondata != null && jsondata != "" && jsondata.dataJson.trim() != "") {
            var dataJSON = JSON.parse(jsondata.dataJson);
            dataJSON.CountPanel[0].AdminCount;
            am4core.ready(function () {
                am4core.useTheme(am4themes_animated);
                var chartQRC = am4core.create("QRCCount", am4charts.PieChart);
                chartQRC.data = [{
                    "UserType": "Administrator",
                    "Count": 20
                }, {
                    "UserType": "Manager",
                    "Count": 5//dataJSON.CountPanel[0].EmpCount
                }, {
                    "UserType": "Employee",
                    "Count": 3//dataJSON.CountPanel[0].ManagerCount
					}];
				debugger;
                // Add and configure Series
                var pieSeries = chartQRC.series.push(new am4charts.PieSeries());
                pieSeries.dataFields.value = "Count";
                pieSeries.innerRadius = am4core.percent(50);
                pieSeries.ticks.template.disabled = true;
                pieSeries.labels.template.disabled = true;

                var rgm = new am4core.RadialGradientModifier();
                rgm.brightnesses.push(-0.8, -0.8, -0.5, 0, -0.5);
                pieSeries.slices.template.fillModifier = rgm;
                pieSeries.slices.template.strokeModifier = rgm;
                pieSeries.slices.template.strokeOpacity = 0.4;
                pieSeries.slices.template.strokeWidth = 0;

                chartQRC.legend = new am4charts.Legend();
				chartQRC.legend.position = "right";
				chartQRC.legend.disabled = true

            }); // end am4core.ready()
        }
    }
        });

        $("#HiringOnBoard").click(function () {
            $('html,body').animate({
                scrollTop: $("#hiringOnBordingDiv").offset().top
            }, 'slow');
		});


		am4core.ready(function () {

			// Themes begin
			//am4core.useTheme(am4themes_dataviz);
			//am4core.useTheme(am4themes_animated);
			// Themes end

			var chart = am4core.create("chartdiv", am4charts.XYChart);
			chart.hiddenState.properties.opacity = 0; // this creates initial fade-in

			chart.data = [
				{
					country: "USA",
					visits: 23725
				},
				{
					country: "China",
					visits: 1882
				},
				{
					country: "Japan",
					visits: 1809
				},
				{
					country: "Germany",
					visits: 1322
				},
				{
					country: "UK",
					visits: 1122
				},
				{
					country: "France",
					visits: 1114
				},
				{
					country: "India",
					visits: 984
				},
				{
					country: "Spain",
					visits: 711
				},
				{
					country: "Netherlands",
					visits: 665
				},
				{
					country: "Russia",
					visits: 580
				},
				{
					country: "South Korea",
					visits: 443
				},
				{
					country: "Canada",
					visits: 441
				}
			];

			var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
			categoryAxis.renderer.grid.template.location = 0;
			categoryAxis.dataFields.category = "country";
			categoryAxis.renderer.minGridDistance = 40;
			categoryAxis.fontSize = 11;

			var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
			valueAxis.min = 0;
			valueAxis.max = 24000;
			valueAxis.strictMinMax = true;
			valueAxis.renderer.minGridDistance = 30;
			// axis break
			var axisBreak = valueAxis.axisBreaks.create();
			axisBreak.startValue = 2100;
			axisBreak.endValue = 22900;
			axisBreak.breakSize = 0.005;

			// make break expand on hover
			var hoverState = axisBreak.states.create("hover");
			hoverState.properties.breakSize = 1;
			hoverState.properties.opacity = 0.1;
			hoverState.transitionDuration = 1500;

			axisBreak.defaultState.transitionDuration = 1000;


			var series = chart.series.push(new am4charts.ColumnSeries());
			series.dataFields.categoryX = "country";
			series.dataFields.valueY = "visits";
			series.columns.template.tooltipText = "{valueY.value}";
			series.columns.template.tooltipY = 0;
			series.columns.template.strokeOpacity = 0;

			// as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set
			series.columns.template.adapter.add("fill", function (fill, target) {
				return chart.colors.getIndex(target.dataItem.index);
			});

		});
 });
</script>

