@model WorkOrderEMS.Models.POTypeDataModel
@{
    ViewBag.Title = "Create PO";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    long locationId = 0;
    long userType = 0;
    string ServiceId = string.Empty;
    WorkOrderEMS.Models.eTracLoginModel ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];
    if (ObjLogin != null)
    {
        locationId = ObjLogin.LocationID;
        userType = ObjLogin.UserRoleId;
    }
    string EMD = System.Configuration.ConfigurationManager.AppSettings["EmergencyDocuments"];
}
<link href='https://fonts.googleapis.com/css?family=Titillium+Web:400,300,600' rel='stylesheet' type='text'>
<link href="~/Content/eFleetVehicle/eFleetstyle.css" rel="stylesheet" />
<style type="text/css">
    input[type="radio"] {
        height: 20px;
        width: 20px;
        background-color: #4475b5;
        color: #4475b5;
    }

    .errorspace {
        margin-top: -5px
    }

    .input-disabled {
        background-color: #EBEBE4;
    }
</style>
@section scripts{
    <script type="text/javascript">
    var $_locationId = '@locationId';
    var $_userTypeId = '@userType';
        $_ServiceID = '@ServiceId';
        var $_Edit = '@ViewBag.UpdateMode'
        var $_VendorId = 0;
        var update = '@ViewBag.UpdateMode';

         $(function() {
             $('#AllocateToLocation').multiselect({
                 includeSelectAllOption: true,
                 onChange: function (element, checked) {
                             var Services = $('#AllocateToLocation option:selected');
                             var selected = [];
                             $(Services).each(function (index, Services) {

                                 var ss = $(Services).val();
                                 if (ss != undefined && parseInt(ss) > 0) {
                                     selected.push([$(this).val()]);
                                 }
                             });
                             $("#AllocateLocationID").val(selected);
                         }
        });
    });
    </script>
    <script type="text/javascript">
        $(window).bind('resize', function () {
            var width = $('#jqGrid_container').width();
            $('#tbl_CompanyFacilityDataList').setGridWidth(width);
        });
    </script>

}


<script src="~/Scripts/BootStrap-Multiselect/JS/jquery.multi-select.js"></script>
@Html.AntiForgeryToken()
@Html.ValidationSummary(true)
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @id = "po_form" }))
{
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Create PO
            </div>
            <div class=" clearfix"></div>
            <div class="form">
                <div class="tab-content">
                    @Html.HiddenFor(model => model.POId)
                    <div class="top-row">
                        <p id="IsReccuringAddedForVendor" style="display:none;color:red;"><b>Reccuring PO not fill for this vendor please select another vendor</b></p>
                    </div>
                    <div class="top-row" style="margin-top:-30px;">
                        @if (@ViewBag.UpdateMode == true)
                        {
                            <input type="text" value="@ViewBag.PONumberData" id="PONumber" name="PONumber" style="background-color:#EBEBE4;text-align:center;" readonly />
                        }
                        else
                        {
                            <input type="text" value="@ViewBag.PONumber" id="PONumber" name="PONumber" style="background-color:#EBEBE4;text-align:center;" readonly />
                        }
                    </div>
                    <br /><br />
                    <div class="top-row">
                        <div class="field-wrap">
                            <label id="lblLocation">
                                Select Location<span class="req">*</span>
                            </label>
                            @if (Session != null)
                            {
                                if (Session["eTrac_UserLocations"] != null)
                                {

                                    @Html.DropDownList("Location", new SelectList((List<WorkOrderEMS.Models.UserLocations>)Session["eTrac_UserLocations"], "LocationId", "LocationName"), "--Select Locaion--", new { @id = "Location", @onchange = "getVendorList(false)" })
                                }
                            }
                            <div class="errorspace">
                                @Html.ValidationMessageFor(model => model.Location)
                            </div>
                        </div>
                        <div class="field-wrap">
                            <label id="lblPOType">
                                Select PO Type<span class="req">*</span>
                            </label>
                                <select name="POType" id="POType">
                                    <option value="0">--Select POType--</option>
                                    <option value="1">Normal PO</option>
                                    <option value="2">Reccuring PO</option>
                                    <option value="3">Emergency PO</option>
                                    <option value="4">Blanket PO</option>
                                </select>

                            <div class="errorspace">
                                @Html.ValidationMessageFor(model => model.POType)
                            </div>
                        </div>
                    </div>
                    <!--Div Emeregency-->
                    <div class="top-row ShowRowForEmergency" style="display:none">
                        <div class="field-wrap">
                            <label style="font-size:15px;">
                                Is Vendor is registered ?<span class="req">*</span>
                            </label>
                            <span style="margin-left:250px;">
                                <input type="radio" id='IsVendorRegisterYes' value="1" name="IsVendorRegister" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type="radio" id='IsVendorRegisterNo' value="0" name="IsVendorRegister" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>No
                            </span>
                        </div>
                    </div>
                    <!--End div Emergency-->
                    <br class="brs" style="display:none;" />
                    <br class="brs" style="display:none;" />
                    <div class="top-row  WhenVenderRegister">
                        <div class="field-wrap">
                            <label id="lblVendor">
                                Company<span class="req">*</span>
                            </label>
                            @if (@ViewBag.UpdateMode == true)
                            {
                                if (ViewBag.VendorList != null)
                                {@Html.DropDownListFor(model => model.Vendor, new SelectList(ViewBag.VendorList, "CompanyId", "CompanyNameLegal"), "--Select Company--", new { @id = "Vendor",@class="VendorClass" })}
                            else
                            {<select id="State"><option value="-1">@ViewBag.POType</option></select>}
                    }
                    else // This is temorary need to use Razor
                    {
                        <select name="@Html.NameFor(model => model.Vendor)"
                                id="@Html.IdFor(model => model.Vendor)">
                            <option>--Select Company--</option>
                        </select>
                    }
                            <div class="errorspace">
                                @Html.ValidationMessageFor(model => model.Vendor)
                            </div>
                        </div>
                        <div class="field-wrap">
                            <label id="lblPointOfContact">
                                Point of Contact<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.PointOfContactName, new { @id = "PointOfContactName", @readonly = "readonly" })
                            <div class="errorspace">
                                @Html.ValidationMessageFor(model => model.PointOfContactName)
                            </div>
                            @Html.HiddenFor(model => model.PointOfContactNameHidden, new { @id = "PointOfContactNameHidden" })
                        </div>
                    </div>
                    <div class="top-row ShowNormalPO">
                        <div class="field-wrap">
                            <label id="lblIssueDate">
                                Issue Date<span class="req">*</span>
                            </label>
                            @if (@ViewBag.UpdateMode == true)
                            {
                                @Html.TextBoxFor(model => model.IssueDate, "{0:MM/dd/yyyy}", new { @id = "IssueDateEdit", @onkeydown = "return false;", @style = "background-color:#EBEBE4;" })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.IssueDate, "{0:MM/dd/yyyy}", new { @id = "IssueDate", @onkeydown = "return false;", @style = "background-color:#EBEBE4;" })
                            }
                        </div>
                        <div class="field-wrap">
                            <label id="lblDeliveryDate">
                                Delivery Date<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.DeliveryDate, "{0:MM/dd/yyyy}", new { @id = "DeliveryDate", @onkeydown = "return false;" })
                        </div>
                    </div>
                    <!-- Div for Recurrence -->
                    <div class="top-row ShowReccuringType" style="display:none">
                        <div class="field-wrap">
                            <label id="lblInvoicingFrequency">
                                Invoicing Frequency<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.InvoicingFrequency, new { @id = "InvoicingFrequency", @onkeydown = "return false;", @style = "background-color:#EBEBE4;" })

                        </div>
                        <div class="field-wrap">
                            <label id="lblCostDuringPeriod">
                                Cost During Period<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.CostDuringPeriod, new { @id = "CostDuringPeriod", @onkeydown = "return false;", @style = "background-color:#EBEBE4;" })
                        </div>
                    </div>
                    <div class="top-row ShowReccuringType" style="display:none">
                        <div class="field-wrap">
                            <label id="lblBillDate">
                                Bill Date<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.BillDate, "{0:MM/dd/yyyy}", new { @id = "BillDate", @onkeydown = "return false;" })
                        </div>
                        <div class="field-wrap">
                            @if (Session != null)
                            {
                                if (Session["eTrac_UserLocations"] != null)
                                {
                                    @Html.DropDownList("AllocateToLocation", new SelectList((List<WorkOrderEMS.Models.UserLocations>)Session["eTrac_UserLocations"], "LocationId", "LocationName"), null, new { @id = "AllocateToLocation", @multiple = "multiple", @class = "form-control" })
                                    <span style="display: none; color:red;" class="">Select at least one Location to allocate.</span>
                                    @Html.Hidden("AllocateLocationID")
                                }
                            }
                        </div>
                    </div>
                    <!-- End Div for Recurrence -->

                    <div class="top-row AdressShowHide">
                        <div class="field-wrap">
                            <label id="lblAddress">
                                Address<span class="req">*</span>
                            </label>
                            @Html.TextAreaFor(model => model.PointOfContactAddress, new { @id = "PointOfContactAddress", @readonly = "readonly" })
                        </div>
                        <div class="field-wrap">
                            <label style="margin-left:-13px;">
                                PO Document<span class="req"></span>
                            </label>
                            <div id="dvDocPreview">
                            </div>
                            <input id="fileuploadEmergency" type="file" style="margin-left:auto;" name="POD_EmergencyPODocumentFile" />
                            <ul class="attachment">
                                @if (Model.POD_EmergencyPODocument != null && Model.POD_EmergencyPODocument != "")
                                {
                                    <li style="margin-left :25%;margin-top:20px;">
                                        <a class="title" href="@Url.Content(EMD+Model.POD_EmergencyPODocument)">@Model.POD_EmergencyPODocument</a>
                                    </li>
                                }
                            </ul>
                            <div class="errorspace">
                                @Html.ValidationMessageFor(model => model.POD_EmergencyPODocumentFile)
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.PointOfContactAddressHidden, new { @id = "PointOfContactAddressHidden" })
                    <!---Div for Emergency PO-->
                    @*<br /><br />*@
                    <div class="top-row IsVendorNotRegister" style="display:none;">
                        <div class="field-wrap">
                            <label>
                                Vendor Name<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.VendorName, new { @id = "VendorName" })
                        </div>
                        <div class="field-wrap">
                            <label>
                                Comment<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.Comment, new { @id = "Comment" })
                        </div>
                    </div>
                    <div class="top-row IsVendorNotRegister" style="display:none;">
                        <div class="field-wrap">
                            <label>
                                Ammount<span class="req">*</span>
                            </label>
                            @Html.TextBoxFor(model => model.Amount, new { @id = "Amount" })
                        </div>
                        <div class="field-wrap">
                            <label style="margin-left:-13px;">
                                PO Document<span class="req"></span>
                            </label>
                            <div id="dvDocPreview">
                            </div>
                            <input id="fileuploadEmergency" type="file" style="margin-left:auto;" name="POD_EmergencyPODocumentFile" />
                            <ul class="attachment">
                                @if (Model.POD_EmergencyPODocument != null && Model.POD_EmergencyPODocument != "")
                                {
                                    <li style="margin-left :25%;margin-top:20px;">
                                        <a class="title" href="@Url.Content(EMD+Model.POD_EmergencyPODocument)">@Model.POD_EmergencyPODocument</a>
                                    </li>
                                }
                            </ul>
                            <div class="errorspace">
                                @Html.ValidationMessageFor(model => model.POD_EmergencyPODocumentFile)
                            </div>
                        </div>
                    </div>
                    @*<br />*@
                    <div class="top-row EmergencyQuestionsInjured" style="display:none;">
                        <div class="field-wrap">
                            <label style="font-size:14px;">
                                Q.1)&nbsp;&nbsp;&nbsp;&nbsp; Is Someone Injured or Life Endangered ?<span class="req">*</span>
                            </label>
                            <span style="margin-left:400px;">
                                <input type="radio" id='IsInjuredYes' value="Y" name="IsInjured" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type="radio" id='IsInjuredNo' value="N" name="IsInjured" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>No
                            </span>
                        </div>
                    </div>
                    @*<br />*@
                    <div class="top-row EmergencyQuestionsContinues" style="display:none;">
                        <div class="field-wrap">
                            <label style="font-size:14px;">
                                Q.2)&nbsp;&nbsp;&nbsp;&nbsp; Is continuation of operation and low contractual obligation ?<span class="req">*</span>
                            </label>
                            <span style="margin-left:500px;">
                                <input type="radio" id='IscontinuationYes' value="Y" name="Iscontinuation" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type="radio" id='IscontinuationNo' value="N" name="Iscontinuation" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>No
                            </span>
                        </div>
                    </div>
                    @*<br />*@
                    <div class="top-row EmergencyQuestionsBill" style="display:none;">
                        <div class="field-wrap">
                            <label style="font-size:14px;">
                                Q.3)&nbsp;&nbsp;&nbsp;&nbsp; Vendor Requesting pay immediately ?<span class="req">*</span>
                            </label>
                            <span style="margin-left:400px;">
                                <input type="radio" id='IsVendorRequestYes' value="Y" name="IsVendorRequest" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type="radio" id='IsVendorRequestNo' value="N" name="IsVendorRequest" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>No
                            </span>
                        </div>
                    </div>
                    @*<br />*@
                    <div class="top-row EmergencyQuestionsBill" style="display:none;">
                        <div class="field-wrap">
                            <label style="font-size:14px;">
                                Q.4)&nbsp;&nbsp;&nbsp;&nbsp; Vendor willing to bill ?<span class="req">*</span>
                            </label>
                            <span style="margin-left:400px;">
                                <input type="radio" id='IsVendorbillYes' value="Y" name="IsVendorwillingToBill" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input type="radio" id='IsVendorbillNo' value="N" name="IsVendorwillingToBill" class="IsVendorRegister" /><span>&nbsp;&nbsp;</span>No
                            </span>
                        </div>
                    </div>
                <br />
                  @if (ViewBag.UpdateMode != null && ViewBag.UpdateMode == true)
                  {
                      <div class="" style="margin-bottom: 40px;">
                          <div id="jqGrid_container">
                              <table id="tbl_CompanyFacilityDataEditList" border="0" cellpadding="0" cellspacing="0"></table>
                              <div id="divCompanyFacilityEditListPager"></div>
                          </div>
                      </div>
                  }
                  else
                  {
                      <div class="gridShowHide" style="margin-bottom: 40px;">
                          <div id="jqGrid_container">
                              <table id="tbl_CompanyFacilityDataList" border="0" cellpadding="0" cellspacing="0"></table>
                              <div id="divCompanyFacilityListPager"></div>
                          </div>
                      </div>
                  }
                    <!---End Div for Emergency PO-->
                    @if (ViewBag.UpdateMode != null && ViewBag.UpdateMode == true)
                    {
                        <button type="submit" class="btn btn-default bluebutton nxt-btn" id="btnSaveVehicle" value="EditPO" style="background-color:forestgreen;border-radius:18px;margin-left: 20px;width:160px;color:white; ">Update</button>
                    }
                    else
                    {
                        <span>                            
                            <button type="submit" class="btn btn-default bluebutton next  nxt-btn" style="background-color:forestgreen;border-radius:18px;margin-left: 20px;width:160px; " value="ApprovePO" id="btnApprovePO">Send For Approval</button>
                            <button type="submit" class="btn btn-default bluebutton nxt-btn" value="SavePO" id="btnSavePO" style="background-color:royalblue;border-radius:18px;width:120px;color:white;">Save</button>                          
                        </span>
                    }
                </div><!-- tab-content -->
            </div> <!-- /form -->
            <div class="marbottom"></div>
        </div>
    </div>    
}

    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
        $("#lblLocation").hide();
        $("#lblPOType").hide();
        $("#lblVendor").hide();
        $('.drpLocation').hide();
        if(update == 'True')
        {
            debugger
            $("#Vendor").val('@ViewBag.Vendor');
            $("#POType").val(@ViewBag.POTypeDate);
            $('input[type="text]"').attr('readonly','readonly');; // mark it as read only
            $("#Location,#POType,#Vendor").attr("disabled", true);
            $('input[type="text"]').css('background-color', '#DEDEDE')
            $("#Location,#POType, #Vendor, #PointOfContactAddress").css('background-color', '#DEDEDE')
            $('#Vendor').find('option[value="@ViewBag.Vendor"]').attr('selected','selected')
            $("#Vendor").val(@ViewBag.Vendor);
            $("#lblVendor").addClass('active highlight');
            $("#lblVendor,#lblLocation,#lblPOType").show();
            $('#lblIssueDate,#lblVendor,#lblLocation,#lblPOType,#lblPointOfContact,#lblDeliveryDate,#lblInvoicingFrequency,#lblCostDuringPeriod,#lblBillDate,#lblAddress,label').addClass('active highlight');
            if ($("#POType").val() == 1)
            {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }

            if($("#POType").val() == 2)
            {
                $(".ShowReccuringType ,.AdressShowHide, .WhenVenderRegister").show();
                $(".ShowRowForEmergency, .EmergencyQuestions").hide();
                $(".IsVendorNotRegister").hide();
                $('#IsReccuringAddedForVendor').hide();
                $(".ShowNormalPO,.gridShowHide").hide();
                $(".EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".brs").hide();
                $(".IsVendorNotRegister, .ShowAttachment").hide();
                IsRecuring = true;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 3)
            {
                $(".ShowReccuringType, .EmergencyQuestions,.EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO,.AdressShowHide, .WhenVenderRegister").hide();
                $(".ShowRowForEmergency").show();
                $(".brs").hide();
                // $(".ShowReccuringType").hide();
                $(".IsVendorNotRegister,.gridShowHide").hide();
                $('#IsReccuringAddedForVendor, .ShowAttachment').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 4) {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
            $("#Vendor").val(@ViewBag.Vendor);
        }
        $('#DeliveryDate, #BillDate').datepicker({
            format: "mm/dd/yyyy",
            startDate: new Date()
        });
        var now = new Date();
        var date = ((now.getMonth() + 1) + '/' + (now.getDate()) + '/' + now.getFullYear());
        $('#IssueDate').val(date);
        $('#lblIssueDate').addClass('active highlight');
        $("#Location").live("click", function () {
            var $thisadr2st = $(this),
                 label = $thisadr2st.prev('label');
            label.addClass('active highlight');
            $("#lblLocation").show();
        })
        $("#POType").live("click", function () {
            var $thisadr2st = $(this),
                 label = $thisadr2st.prev('label');
            label.addClass('active highlight');
            $("#lblPOType").show();
        })
        $("#Vendor").live("click", function () {
            var $thisadr2st = $(this),
                 label = $thisadr2st.prev('label');
            label.addClass('active highlight');
            $("#lblVendor").show();
        })

        $("#POType").change(function () {
            var IsRecuring = false;
            if ($("#POType").val() == 1)
            {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }

            if($("#POType").val() == 2)
            {
                $(".ShowReccuringType ,.AdressShowHide, .WhenVenderRegister").show();
                $(".ShowRowForEmergency, .EmergencyQuestions").hide();
                $(".IsVendorNotRegister").hide();
                $('#IsReccuringAddedForVendor').hide();
                $(".ShowNormalPO,.gridShowHide").hide();
                $(".EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".brs").hide();
                $(".IsVendorNotRegister, .ShowAttachment").hide();
                //$('select#Vendor').find('option').each(function () {
                //    debugger
                //    $("#Vendor").html("");
                //    $("#Vendor").append
                //    ($('<option></option>').val(null).html("---Select Vendor---"));
                //    if ($(this).val() != "") {
                //        if ($(this).attr('IsRecorring').val() != null && $(this).attr('IsRecorring').val() != "") {
                //            $("#Vendor").append('<option value=' + $(this).val() + 'IsRecorring' + $(this).attr('IsRecorring').val() + '>' + $(this).text() + '</option>');
                //        }
                //    }
                //});
                IsRecuring = true;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 3)
            {
                $(".ShowReccuringType, .EmergencyQuestions,.EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO,.AdressShowHide, .WhenVenderRegister").hide();
                $(".ShowRowForEmergency").show();
                $(".brs").show();
               // $(".ShowReccuringType").hide();
                $(".IsVendorNotRegister,.gridShowHide").hide();
                $('#IsReccuringAddedForVendor, .ShowAttachment').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 4) {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
        })
        $("input[type='radio']").change(function () {
            if ($(this).val() == 1) {
                $(".WhenVenderRegister, .AdressShowHide, .ShowAttachment").show();
                $(".EmergencyQuestions").show();
                $(".EmergencyQuestionsInjured").show();
                $(".brs").show();
                $(".IsVendorNotRegister").hide();
                $(".ShowReccuringType").hide()
            }
            else if($(this).val() == 0){
                $(".WhenVenderRegister, .AdressShowHide").hide();
                $(".EmergencyQuestions").hide();
                $(" .EmergencyQuestionsInjured,.IsVendorNotRegister,.ShowAttachment").show();
                $(".ShowReccuringType, .gridShowHide").hide();
            }
            else if ($(this).val() == "N" && $(this).attr('id') == "IsInjuredNo") //$("div").attr("id")
            {
                $(".EmergencyQuestionsContinues").show();
                $(".EmergencyQuestionsBill").hide();
            }
            else if ($(this).val() == "N" && $(this).attr('id') == "IscontinuationNo") {
                $(".EmergencyQuestionsVendorRequest").show();
                $(".EmergencyQuestionsBill").hide();
                bootbox.dialog({
                    message: "This is not Emeegency PO please fill Normal PO",
                    buttons: {
                        cancel: {
                            label: "Cancel",
                            className: "btn-default pull-right"
                        }
                    },
                    danger: {
                        label: "cancel",
                        classname: "btn btn-primary",
                        callback: function () {
                        }
                    }
                });
            }
            else if ($(this).val() == "Y" && $(this).attr('id') == "IsInjuredYes") {
                $(".EmergencyQuestionsBill").show();
                $(".EmergencyQuestionsContinues").hide();
            }
            else if ($(this).val() == "Y" && $(this).attr('id') == "IscontinuationYes") {
                $(".EmergencyQuestionsBill").show();
                $(".EmergencyQuestionsVendorRequest").hide();
            }
        });
        //$(function () {
        //    $("#fileuploadEmergency").change(function () {
        //        $("#dvDocPreview").html("");
        //        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.pdf|.doc|.txt|.jpg|.JPG|.PNG|.png|.JPEG|.jpeg)$/;
        //        if (regex.test($(this).val().toLowerCase())) {
        //            if ($.browser.msie && parseFloat(jQuery.browser.version) <= 9.0) {
        //                $("#dvDocPreview").show();
        //                $("#dvDocPreview")[0].filters.item("DXImageTransform.Microsoft.AlphaImageLoader").src = $(this).val();
        //            }
        //            else {
        //                if (typeof (FileReader) != "undefined") {
        //                    $("#dvDocPreview").show();
        //                    //$("#dvDocPreview").append("<img />");
        //                    var reader = new FileReader();
        //                    reader.onload = function (e) {
        //                        $("#dvDocPreview").attr("src", e.target.result);
        //                    }
        //                    reader.readAsDataURL($(this)[0].files[0]);
        //                } else {
        //                    alert("This browser does not support FileReader.");
        //                }
        //            }
        //        }
        //    });
        //});
    })
    </script>
<script>
        $('#po_form').on("click", ":submit", function(){
            //$('#po_form').submit(function (event) {
            //e.preventDefault();
            var formData = new FormData();
            var totalFiles = document.getElementById("fileuploadEmergency").files.length;
            var file = document.getElementById("fileuploadEmergency").files[0];
            formData.append("FileUpload", file);

        if ($("#po_form").valid())
        {
            var obj = new Object();
            var QuestionAnswer = [];
            obj.PONumber = $("#PONumber").val(); obj.Location = $("#Location option:selected").val();
            obj.POType = $("#POType").val() ; obj.IsVendorRegister = $("input[type='radio'][name='IsVendorRegister']:checked").val();
            obj.Vendor = $("#Vendor option:selected").val(); obj.PointOfContactName = $("#PointOfContactName").val();
            obj.IssueDate = $("#IssueDate").val(); obj.DeliveryDate = $("#DeliveryDate").val();
            obj.InvoicingFrequency = $("#InvoicingFrequency").val(); obj.CostDuringPeriod = $("#CostDuringPeriod").val();
            obj.BillDate = $("#BillDate").val(); obj.PointOfContactAddress = $("#PointOfContactAddress").val();
            obj.VendorName = $("#VendorName").val(); obj.Comment = $("#Comment").val(); obj.Amount = $("#Amount").val();
            obj.IsInjured = $("input[type='radio'][name='IsInjured']:checked").val();
            obj.Iscontinuation = $("input[type='radio'][name='Iscontinuation']:checked").val();
            obj.IsVendorRequest = $("input[type='radio'][name='IsVendorRequest']:checked").val();
            obj.IsVendorwillingToBill = $("input[type='radio'][name='IsVendorwillingToBill']:checked").val();
            obj.IssueDate = $("#IssueDateEdit").val();
            obj.POD_EmergencyPODocumentFile = $('#fileuploadEmergency')[0].files[0];
            obj.POStatus = $(this).val();
            if (obj.IsInjured != null)
            {
                QuestionAnswer.push({ 'QuestionId': 2, 'Answer': obj.IsInjured });
            }
            if (obj.Iscontinuation == "Y")
            {
                QuestionAnswer.push({ 'QuestionId': 3, 'Answer': obj.Iscontinuation });
            }
            QuestionAnswer.push({ 'QuestionId': 4, 'Answer': obj.IsVendorRequest });
            QuestionAnswer.push({ 'QuestionId': 5, 'Answer': obj.IsVendorwillingToBill });
            var Total; var GridData;
            if (update == 'True') {
                 GridData = $('#tbl_CompanyFacilityDataEditList').getRowData();
                obj.POId = $('#POId').val();
                 obj.Total = $("#tbl_CompanyFacilityDataEditList").jqGrid('getCol', 'TotalPrice', false, 'sum');
            }
            else {
                 GridData = $('#tbl_CompanyFacilityDataList').getRowData();
                 obj.Total = $("#tbl_CompanyFacilityDataList").jqGrid('getCol', 'TotalPrice', false, 'sum');
            }
            if (update == 'True') {
                var tt = obj.PONumber.split("O").pop();
                obj.POId = parseInt(tt);
            }

            //To save File doc of PO to folder and get name of file to save to database
            var img = $("#fileuploadEmergency").val();
            @*if (img == "" || img == undefined || img == null) {
                obj.POD_EmergencyPODocumentFile = "";
            }
            else {
                var ImageFile;
                file_data = $("#fileuploadEmergency").prop("files")[0]; // Getting the properties of file from file field
                form_data = new FormData(); // Creating object of FormData class
                form_data.append("file", file_data) // Appending parameter named file with properties of file_field to form_data
                form_data.append("CallID", 11) // Adding extra parameters to form_data
                if (file_data != undefined) {
                    $.ajax({
                        url: '@Url.Action("UploadedImagePO", "POTypeData")',
                        dataType: 'script',
                        cache: false,
                        contentType: false,
                        processData: false,
                        async: false,
                        beforeSend: function () {
                            new fn_showMaskloader('Please wait...');
                        },
                        data: form_data, // Setting the data attribute of ajax with file_data
                        type: 'POST',
                        success: function (data) {
                            obj.POD_EmergencyPODocumentFile = data;
                            // return data;

                        },
                        error: function (e) { alert("error:" + e); },
                        complete: function () {
                            fn_hideMaskloader();

                        }
                    });
                }
            }*@
            var SaveUrl = 'POTypeData/SavePOTypeDetails/';
            $.ajax({
            url: $_HostPrefix + SaveUrl,
            type: 'POST',
            datatype: 'application/json',
            contentType:  'application/json',

                //data:JSON.stringify(formData),
            data: JSON.stringify({ objPOTypeDataModel: obj, obj: GridData, objQuestioAsnwerList: QuestionAnswer }),
            //data: { "onjFormData": values, "obj":GridData },
            beforeSend: function () {
              new fn_showMaskloader('Please wait...');
            },
            success: function (result) {
                var listUrl = 'POTypeData/AllPOList';
                if (result == "This PO is self approved by you successfully.") {
                    bootbox.dialog({
                        message: result,
                        buttons: {
                            cancel: {
                                label: "Cancel",
                                className: "btn-default pull-right"
                            }
                        },
                        danger: {
                            label: "cancel",
                            classname: "btn btn-primary",
                            callback: function () {
                            }
                        }
                    });
                }
                else {
                    toastr.success("PO data saved successfully.");
                }

                window.location.href = $_HostPrefix + listUrl;
                },
            error: function () { },
            complete: function () {
                 fn_hideMaskloader();
                 window.location.href = $_HostPrefix + listUrl;
               }
            });

            return true
            window.location.href = $_HostPrefix + listUrl;
            }
        else
        {
            return false;
        }
        });

</script>

<script src="~/Scripts/eFleetVehicle/reg.js"></script>
<script src="~/GridListing/JqGridScript/ListCompanyFacility.js"></script>
<script src="~/GridListing/JqGridScript/ListCompanyFacilityForEdit.js"></script>